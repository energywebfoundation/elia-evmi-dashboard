version: '3.8'

services:

    ganache:
        # our local blockchain
        container_name: ganache
        image: 'trufflesuite/ganache-cli'
        ports:
            - '8544:8544'
        networks:
            elia-dev-net:
                ipv4_address: 172.16.238.10
        command: [
            "-m",
            "candy maple cake sugar pudding cream honey rich smooth crumble sweet treat",
            "--port",
            "8544",
            "--accounts",
            "20",
            "--networkId=9",
            "--gasPrice=1",
            "--gasLimit=10000000"
        ]

    ocn-registry:
        # deploys registry smart contracts
        container_name: ocn-registry-deploy
        depends_on:
            - ganache
        image: 'openchargingnetwork/ocn-registry-deployer'
        networks:
            - elia-dev-net

    evd-registry:
        # deploys ev dashboard registry smart contract
        container_name: evd-registry-deploy
        depends_on:
            - ganache
            - ocn-registry
            - ocn-node # waits on ocn-node to be sure ocn-registry is deployed
        build:
            context: ./contracts
            dockerfile: Dockerfile
        environment:
            JSON_RPC_URL: http://172.16.238.10:8544
            DEPLOYER_KEY: '0xc87509a1c067bbde78beb793e6fa76530b6382a4c0241e5e4a9ec0a0f44dc0d3'
            OCN_NODE_URL: http://172.16.238.20:8080
            OCN_REGISTRY_ADDRESS: '0x345ca3e014aaf5dca488057592ee47305d9b3e10'
        networks:
            - elia-dev-net

    ocn-node:
        # node used by all parties (note: in-memory database)
        container_name: ocn-node
        image: 'openchargingnetwork/ocn-node:1.1.0'
        depends_on:
            - ocn-registry
        networks:
            elia-dev-net:
                ipv4_address: 172.16.238.20
        command: [
            "java",
            "-Dlogging.level.web=INFO",
            "-Docn.node.dev=true",
            "-Docn.node.signatures=false",
            "-Docn.node.url=http://172.16.238.20:8080",
            "-Docn.node.apikey=randomkey",
            "-Docn.node.web3.provider=http://172.16.238.10:8544",
            "-Docn.node.web3.contracts.registry=0x345cA3e014Aaf5dcA488057592ee47305D9B3e10",
            "-Docn.node.web3.contracts.permissions=0xf25186B5081Ff5cE73482AD761DB0eB0d25abfBF",
            "-Docn.node.stillAliveEnabled=false",
            "-Docn.node.plannedPartySearchEnabled=false",
            "-jar",
            "./libs/ocn-node-1.1.0.jar"
        ]

    msp-simulation:
        # msp providing access to vehicles (depends on ocn-tools repository)
        container_name: msp-simulation
        build:
            context: ../ocn-tools
            dockerfile: Dockerfile.dev
        image: ocn-tools
        restart: always
        depends_on:
            - ocn-node
        volumes:
            - type: bind
              source: ../ocn-tools/src
              target: /home/node/app/src
        networks:
            elia-dev-net:
                ipv4_address: 172.16.238.30
        environment:
            OCN_NODE_URL: http://172.16.238.20:8080
            OCN_IDENTITY: '0x49b2e2b48cfc25fda1d1cbdb2197b83902142c6da502dcf1871c628ea524f11b'
            OCN_NODE_KEY: randomkey
            OCN_STAGE: docker
        command: ['./wait-for-node.dev.sh', 'start-msp']

    cpo-simulation:
        # cpo providing access to charge points (depends on ocn-tools repository)
        container_name: cpo-simulation
        build:
            context: ../ocn-tools
            dockerfile: Dockerfile.dev
        image: ocn-tools
        restart: always
        depends_on:
            - ocn-node
        volumes:
            - type: bind
              source: ../ocn-tools/src
              target: /home/node/app/src
        networks:
            elia-dev-net:
                ipv4_address: 172.16.238.40
        environment:
            OCN_NODE_URL: http://172.16.238.20:8080
            OCN_IDENTITY: '0x737f5c61de545d32059ce6d5bc72f7d34b9963310adde62ef0f26621266b65dc'
            OCN_NODE_KEY: randomkey
            OCN_STAGE: docker
        command: ['./wait-for-node.dev.sh', 'start-cpo']

    ev-dashboard-backend-db:
        image: postgres:latest
        container_name: ev-dashboard-db
        restart: always
        ports:
            - 5432:5432
        networks:
            elia-dev-net:
                ipv4_address: 172.16.238.51
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: postgres
            POSTGRES_HOST: db

    ev-dashboard-backend:
        container_name: ev-dashboard-backend
        build:
            context: ../ev-dashboard-backend
            dockerfile: Dockerfile.dev
        image: evd_backend
        restart: always
        ports:
            - '8111:3000'
            - '8090:8090'
        depends_on:
            - ev-dashboard-backend-db
        volumes:
            - type: bind
              source: ../ev-dashboard-backend
              target: /home/node/app
        networks:
            elia-dev-net:
                ipv4_address: 172.16.238.50
        environment:
            SERVER_PORT: 3000
            LOG_LEVEL: info
            OCN_BRIDGE_PORT: 8090
            OCN_BRIDGE_URL: http://172.16.238.50:8090
            OCN_BRIDGE_NODE_URL: http://172.16.238.20:8080
            OCN_BRIDGE_NODE_KEY: randomkey
            OCN_BRIDGE_DRY_RUN: 'false'
            OCN_BRIDGE_SIGNER: '0x659cbb0e2411a44db63778987b1e22153c086a95eb6b18bdf89de078917abc63'
            OCN_BRIDGE_COUNTRY_CODE: DE
            OCN_BRIDGE_PARTY_ID: FLX
            OCN_BRIDGE_NETWORK: docker
            OCN_BRIDGE_PERMISSIONS: '6' # comma-separated integers
            TYPEORM_CONNECTION: postgres
            TYPEORM_HOST: '172.16.238.51'
            TYPEORM_USERNAME: postgres
            TYPEORM_PASSWORD: postgres
            TYPEORM_DATABASE: postgres
            TYPEORM_PORT: 5432
            TYPEORM_SYNCHRONIZE: 'true'
            TYPEORM_LOGGING: 'false'

networks:
    # should all run within network with only flex-backend ports exposed
    elia-dev-net:
        ipam:
            driver: default
            config:
                - subnet: '172.16.238.0/24'
